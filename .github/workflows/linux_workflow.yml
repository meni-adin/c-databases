name: Linux workflow

on: [workflow_dispatch, push, pull_request]
jobs:
  build-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository code
        uses: actions/checkout@v4
      - name: Configure CMake
        run:  cmake --preset config-debug
      - name: Build
        run:  cmake --build --preset build-debug
      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-debug
          path: build/

  test-debug:
    runs-on: ubuntu-latest
    needs: build-debug
    steps:
      - name: Check-out repository code
        uses: actions/checkout@v4
      - name: Download tests executables
        uses: actions/download-artifact@v4
        with:
          name: build-debug
          path: build/
      - name: Add execute permission
        run:  chmod u+x build/debug/test/doubly_linked_list_test/doubly_linked_list_test
      - name: Run tests
        run:  ctest --preset test-debug

  # test-memory-leaks:
  #   runs-on: ubuntu-latest
  #   needs: compile
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build
  #         path: build/
  #     - name: Install valgrind
  #       run:  sudo apt install valgrind
  #     - name: Add execute permission
  #       run:  chmod u+x build/test/my_math_lib_ut/my_math_lib_ut
  #     - name: Run tests
  #       run:  valgrind --leak-check=full ./build/test/my_math_lib_ut/my_math_lib_ut 2> valgrind_output.txt
  #     - name: Valgrind output
  #       run:  cat valgrind_output.txt
  #     - name: Check for memory leaks
  #       id: check_leaks
  #       run: |
  #         if grep -q "definitely lost" valgrind_output.txt; then
  #           echo "Memory leaks found!"
  #           exit 1
  #         else
  #           echo "No memory leaks found."
  #         fi
